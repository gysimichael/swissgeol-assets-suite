name: Publish Edge

on:
  push:
    branches:
      - "develop"

jobs:
  determine_version:
    name: "determine version"
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.find_version.outputs.result }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Get tags of edge commit
        id: get_edge_tags
        run: |
          git fetch --tags
          EDGE_COMMIT=$(git rev-list -n 1 edge)
          EDGE_TAGS=$(printf "%s," $(git tag --contains $EDGE_COMMIT))
          EDGE_TAGS=${EDGE_TAGS%,}
          echo "edge_tags=$EDGE_TAGS" >> "$GITHUB_OUTPUT"
      - name: Find next version
        id: find_version
        uses: actions/github-script@v7
        env:
          EDGE_TAGS: ${{ steps.get_edge_tags.outputs.edge_tags }}
        with:
          result-encoding: string
          script: |
            const { findNextVersion } = require('./.github/scripts/find-version.js');
            const tags = process.env.EDGE_TAGS.split(',');
            const branch = context.ref.replace('refs/heads/', '');
            const version = findNextVersion(tags, branch);
            return `${version.major}.${version.minor}.${version.patch}-dev${version.preRelease}`;

  build_and_push_api:
    name: "build and push api"
    needs:
      - determine_version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Create image
        uses: ./.github/actions/create-image
        with:
          IMAGE_NAME: ${{ vars.BASE_IMAGE_NAME }}-api
          TAG: edge
          VERSION: ${{ needs.determine_version.outputs.version }}
          DOCKERFILE: ./apps/server-asset-sg/docker/Dockerfile
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_and_push_app:
    name: "build and push app"
    needs:
      - determine_version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Create image
        uses: ./.github/actions/create-image
        with:
          IMAGE_NAME: ${{ vars.BASE_IMAGE_NAME }}-app
          TAG: edge
          VERSION: ${{ needs.determine_version.outputs.version }}
          DOCKERFILE: ./apps/client-asset-sg/docker/Dockerfile
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tag_commit:
    name: "tag commit"
    needs:
      - determine_version
      - build_and_push_api
      - build_and_push_app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: tag edge
        uses: ./.github/actions/tag-commit
        with:
          TAG_NAME: edge
          SHA: ${{ github.sha }}
      - name: tag version
        uses: ./.github/actions/tag-commit
        with:
          TAG_NAME: ${{ needs.determine_version.outputs.version }}
          SHA: ${{ github.sha }}
