on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version number (e.g. 1.12)"
        required: true
jobs:
  release_app:
    name: release app
    needs:
      - read_version
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Packages
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Pull docker image
        run: docker pull ${{ vars.BASE_IMAGE_NAME }}-app:release-candidate

      - name: Tag docker image
        run: |
          docker tag ${{ vars.BASE_IMAGE_NAME }}-app:release-candidate ${{ vars.BASE_IMAGE_NAME }}-app:${{ inputs.VERSION }}
          docker tag ${{ vars.BASE_IMAGE_NAME }}-app:release-candidate ${{ vars.BASE_IMAGE_NAME }}-app:latest

      - name: Push docker image
        run: |
          docker push ${{ vars.BASE_IMAGE_NAME }}-app:${{ inputs.VERSION }}
          docker push ${{ vars.BASE_IMAGE_NAME }}-app:latest

  release_api:
    name: release api
    needs:
      - read_version
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Packages
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Pull docker image
        run: docker pull ${{ vars.BASE_IMAGE_NAME }}-api:release-candidate

      - name: Tag docker image
        run: |
          docker tag ${{ vars.BASE_IMAGE_NAME }}-api:release-candidate ${{ vars.BASE_IMAGE_NAME }}-api:${{ inputs.VERSION }}
          docker tag ${{ vars.BASE_IMAGE_NAME }}-api:release-candidate ${{ vars.BASE_IMAGE_NAME }}-api:latest

      - name: Push docker image
        run: |
          docker push ${{ vars.BASE_IMAGE_NAME }}-api:${{ inputs.VERSION }}
          docker push ${{ vars.BASE_IMAGE_NAME }}-api:latest
