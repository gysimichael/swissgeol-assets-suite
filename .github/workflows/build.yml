name: build

on:
  push:
    branches:
      - '*'
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install node dependencies
        run: npm ci

  test:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Run tests
        run: npm run test

  lint:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Run lint
        run: npm run lint

  # It would be cleaner and probably more performant to replace this build step
  # with either a non-emitting build or a simple type check.
  # We only have `build` available for now,
  # since the project is currently split across a multitude of small packages,
  # all of which have to specify their own commands.
  # (Daniel von Atzigen, 2024-04-12)
  build:
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
      - build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Run build
        run: npm run build

  build_and_push_app:
    name: 'build and push app'
    if: github.event_name == 'push' && github.ref == 'refs/head/develop'
    needs:
      - test
      - lint
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Create image
        uses: ./.github/actions/create-image
        with:
          IMAGE_NAME: ${{ vars.BASE_IMAGE_NAME }}-app
          TAG: edge
          DOCKERFILE: ./apps/client-asset-sg/docker/Dockerfile

  build_and_push_api:
    name: 'build and push api'
    if: github.event_name == 'push' && github.ref == 'refs/head/develop'
    needs:
      - test
      - lint
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Create image
        uses: ./.github/actions/create-image
        with:
          IMAGE_NAME: ${{ vars.BASE_IMAGE_NAME }}-api
          TAG: edge
          DOCKERFILE: ./apps/server-asset-sg/docker/Dockerfile

  release_candidate:
    name: tag release candidate
    if: github.event_name == 'push' && github.ref == 'refs/head/main'
    needs:
      - test
      - lint
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Packages
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

      - name: Pull docker image
        run: docker pull ${{ vars.BASE_IMAGE_NAME }}-app:edge

      - name: Tag docker image
        run: docker tag ${{ vars.BASE_IMAGE_NAME }}-app:edge ${{ vars.BASE_IMAGE_NAME }}-app:release-candidate

      - name: Push docker image
        run: docker push ${{ vars.BASE_IMAGE_NAME }}-app:release-candidate
